MS Application
==============

**This cross-platform app was generated by** `Briefcase`_ **- part of**
`The BeeWare Project`_. **If you want to see more tools like Briefcase, please
consider** `becoming a financial member of BeeWare`_.

.. _`Briefcase`: https://briefcase.readthedocs.io/
.. _`The BeeWare Project`: https://beeware.org/
.. _`becoming a financial member of BeeWare`: https://beeware.org/contributing/membership

MS Project for the lecture App Project 2. This template contains a functioning multi-GUI class model. The classes can be adapted to the needs of the students. New windows or classes can be added in the same way as existing ones are implemented.

The main page is the main window with which the application starts. From there, users can navigate to another page using buttons. When a subpage is opened, an object of this class is created in the main page and its show() method is called. A signal is also passed to this object. This signal is connected to the show() method of the main page. By simply emitting this signal in the subwindow, the user navigates back to the main page. This principle can also be used to open a sub-sub-window from a sub-window, creating a three-level user interface.

The buttons can also be replaced by a menu or a list if desired. The design of the buttons can be changed or replaced with icons from the Internet. The design, color, background etc. of the windows can be adjusted in QtDesigner.

The following flowchart illustrates the implementation of the navigation between the windows:

.. image:: https://github.com/loublock/ms_app/blob/6ab02c1222bc34ed250628860c2984bbfaba27e6/src/ms_app/documents/multi_ui_files.png
